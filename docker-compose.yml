services:
  # FastAPI Application Service
  api:
    build: ./services/api
    command: uvicorn server:app --host 0.0.0.0 --port 5001 --reload
    ports:
      - "5001:5001"
    environment:
      - PREFECT_API_URL=http://prefect-server:4200/api
      - DATABASE_URL=postgresql://user:password@db:5432/mydatabase
      - MINIO_URL=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - FLOW_RUN_TIMEOUT=180
    volumes:
      - ./services/api:/app
      - ./shared:/app/shared
    depends_on:
      prefect-server:
        condition: service_healthy
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5001/health', timeout=5).raise_for_status()"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # PostgreSQL Database Service
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydatabase
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MinIO Object Storage Service
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Prefect Server
  prefect-server:
    build: ./services/prefect-server
    command: prefect server start --host 0.0.0.0
    ports:
      - "4200:4200"
    environment:
      # Restore PREFECT_API_URL and set the database connection URL
      - PREFECT_API_URL=http://prefect-server:4200/api
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://user:password@db:5432/mydatabase
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      # Use python/requests for the healthcheck and add a start_period
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:4200/api/health', timeout=5).raise_for_status()"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  # Prefect Worker Service
  prefect-worker:
    build: ./services/prefect-worker
    command: sh -c "prefect work-pool create 'default' --type process || true && python worker.py && prefect worker start --pool 'default'"
    environment:
      - PREFECT_API_URL=http://prefect-server:4200/api
      - DATABASE_URL=postgresql://user:password@db:5432/mydatabase
      - MINIO_URL=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    depends_on:
      prefect-server:
        condition: service_healthy
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./services/prefect-worker:/app
      - ./shared:/app/shared

  # Streamlit Frontend Service
  streamlit:
    build: ./services/streamlit
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:5001
    volumes:
      - ./services/streamlit:/app
    depends_on:
      api:
        condition: service_healthy

volumes:
  postgres_data:
  minio_data:
  prefect_data: